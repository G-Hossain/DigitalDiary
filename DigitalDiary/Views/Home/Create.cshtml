@model DigitalDiary.Models.Memory

@{
    Layout = null;
    if(Session["UserId"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm("Create", "Home", FormMethod.Post, new {enctype = "multipart/form-data"}))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Create Memory</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.date, "Date:",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="date" name="date" id="datepicker" class="form-control" />
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })

                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.imagepath,"Image:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.imagepath, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="file" name="ImageFile" required />
                    @Html.ValidationMessageFor(model => model.imagepath, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.experience, "Experience:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.experience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.experience, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.thoughts, "Thoughts:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.thoughts, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.thoughts, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.comments,"Comments:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.modifydate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.modifydate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modifydate, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.importance, "Importance:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.importance, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.importance, "", new { @class = "text-danger" })*@

                    @Html.RadioButtonFor(model => model.importance, "High", new {@checked="checked"})High<br>

                    @Html.RadioButtonFor(model => model.importance, "Moderate")Moderate<br>

                    @Html.RadioButtonFor(model => model.importance, "Less")Less<br>
                </div>
            </div>
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.userid, "userid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
